@model OnlineBanking.DAL.AccountViewModel
@using OnlineBanking.DAL
@{ var user = (Accounts)Session["user"]; }
@{
    ViewBag.Title = "ProfileAccount";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Account Profile</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item">
                            <a href="#">Home</a>
                        </li>
                        <li class="breadcrumb-item active">Account Profile</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-md-3">
                <div class="card card-success">
                    <div class="card-header">
                        <h3 class="card-title">Account Profile</h3>
                    </div>
                    <div class="card-body">
                        <div class="form-horizontal">
                            <input type="hidden" name="Id" id="AccountId" value="@Model.AccountId" />
                            <div class="form-group">
                                <strong>Id: </strong> @Model.AccountId
                            </div>
                            <div class="form-group">
                                <strong>Name: </strong> @Model.Name
                            </div>
                            <div class="form-group">
                                <strong>Email: </strong> @Model.Email
                            </div>
                            <div class="form-group">
                                <strong>Birthday: </strong>@Model.Birthday
                            </div>
                            <div class="form-group">
                                <strong>Address: </strong>@Model.Address
                            </div>
                            <div class="form-group">
                                <strong>Phone: </strong>@Model.Phone
                            </div>
                            <div class="form-group">
                                <strong>NumberID: </strong>@Model.NumberId
                            </div>
                            <div class="form-group">
                                <strong>Status: </strong>@Model.StatusName
                            </div>
                            <div class="form-group">
                                <strong>RoleId: </strong> @Model.RoleName
                            </div>
                            <div class="form-group">
                                <strong>CreatedAt: </strong>@Model.CreatedAt
                            </div>
                            <div class="form-group">
                                <strong>UpdatedAt: </strong> @Model.UpdatedAt
                            </div>
                        </div>
                    </div>
                    <div class="card-footer d-flex justify-content-center">

                    </div>

                    <!-- /.card-body -->
                </div>
            </div>
            <div class="col-md-9">
                <div class="card card-info">
                    <div class="card-header">
                        <h3 class="card-title">Total Account Number</h3>
                        <button class="btn btn-primary btn-sm btn-add">New Account Number</button>
                    </div>
                    <div class="card-body">
                        <div class="form-horizontal">
                            <div class="table-responsive">
                                <table class="display table-responsive-lg min-w850 dataTable no-footer" id="tbl_banks" role="grid" aria-describedby="example4_info">
                                    <thead>
                                        <tr>
                                            <th>No</th>
                                            <th>Account Number</th>
                                            <th>Balance</th>
                                            <th>CurrencyName </th>
                                            <th>Status </th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card card-info">
                    <div class="card-header">
                        <h3 class="card-title">Cheque Books</h3>
                        <button class="btn btn-primary btn-sm text-right" id="btnAddChequeBook">New Cheque Book</button>
                    </div>
                    <div class="card-body">
                        <div class="form-horizontal">
                            <div class="table-responsive">
                                <table class="display table-responsive-lg min-w850 dataTable no-footer" id="datatablesChequeBook" role="grid" aria-describedby="example4_info">
                                    <thead>
                                        <tr>
                                            <th>No</th>
                                            <th>Code</th>
                                            <th>User's Name</th>
                                            <th>Status</th>
                                            <th>Cheques Used</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" id="FormBank" novalidate="novalidate">
                <div class="modal-header">
                    <h4 class="modal-title">Update Infomation Account</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="Id" id="Id" value="" />
                    <input type="hidden" name="type2" id="type2" value="CREATE" />
                    <div class="form-group">
                        <label>Account Number</label>
                        <div class="error">
                            <input type="text" class="form-control" id="NameBank" name="NameBank" placeholder="Account Number...">
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Balance</label>
                        <div class="error">
                            <input type="text" class="form-control" id="Balance" name="Balance" placeholder="Balance...">
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-6">
                                <label>Currency</label>
                                <select class="form-control" id="CurrencyId" name="CurrencyId">
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label>Status</label>
                                <select class="form-control" id="Status" name="StatusBank">
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-warning" data-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="MoneyManagement" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" id="Form2" novalidate="novalidate">
                <div class="modal-header">
                    <h4 class="modal-MoneyManagement">Update Infomation Account</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="Id" id="Id" value="" />
                    <input type="hidden" name="type" id="type" value="CREATE" />
                    <div class="form-group">
                        <label>Account Number</label>
                        <div class="error">
                            <input type="text" class="form-control" id="Name" name="Name" disabled>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Balance</label>
                        <div class="error">
                            <input type="text" class="form-control" id="Amount" name="Amount" placeholder="Balance...">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-warning" data-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts{
    <script>
    const validator = $("#FormBank").validate({
                rules: {
                    "NameBank": {
                        required: true
                    },
                    "Balance": {
                        required: true
                    },
                },
                ignore: [],
                errorClass: "invalid-feedback animated fadeInUp",
                errorElement: "div",
                errorPlacement: function (e, a) {
                   jQuery(a).after(e)
                },
                highlight: function (e) {
                    jQuery(e).closest(".form-group").removeClass("is-invalid").addClass("is-invalid")
                },
                success: function (e) {
                    jQuery(e).closest(".form-group").removeClass("is-invalid").addClass("is-valid")
                },

                submitHandler: function () {
                   var bank = {
                       AccountId : "@Model.AccountId",
                       CurrencyId: $("#CurrencyId").val(),
                       Status: parseInt(($("#Status").val())),
                       Balance: $("#Balance").val(),
                       Name: $("#NameBank").val()
                   };
                   if ($("#type").val() === "EDIT") {
                       bank.BankAccountId = $("#Id").val();
                       managerBank.put(bank);
                   } else {
                       managerBank.post(bank);
                   }
                }
            });
    const validator2 = $("#Form2").validate({
                    rules: {
                        "Amount": {
                            required: true
                        },
                    },
                    ignore: [],
                    errorClass: "invalid-feedback animated fadeInUp",
                    errorElement: "div",
                    errorPlacement: function (e, a) {
                        jQuery(a).after(e)
                    },
                    highlight: function (e) {
                        jQuery(e).closest(".form-group").removeClass("is-invalid").addClass("is-invalid")
                    },
                    success: function (e) {
                        jQuery(e).closest(".form-group").removeClass("is-invalid").addClass("is-valid")
                    },

                    submitHandler: function () {
                       var trans = {
                           Amount: $("#Amount").val(),
                           ToId: $("#Name").val(),
                       };
                       managerBank.receiveMoney(trans);
                    }
                });
        function loadStatus(status = null) {
            $.ajax({
                type: "GET",
                url: "/Admin/BankAccounts/GetStatus",
                success: function (res) {
                    var html;
                    $.each(res, function (key, value) {
                        html += "<option value = '" + key + "' " + ((parseInt(status)) === key ? 'selected' : '') + ">" + value + " </option>";
                    });
                    $('#Status').html(html);
                }
            })
        }
        function loadCurrency(CurrencyId = null, page = 1, key = null, pageSize = 100) {
            $.ajax({
                type: "GET",
                url: "/Admin/Currencies/GetData",
                data: { page: page, key: key, pageSize: pageSize},
                success: function (res) {
                    var html;
                    $.each(res.data, function (key, value) {
                        html += "<option value = '" + value.CurrencyId + "' " + ((parseInt(CurrencyId))=== value.CurrencyId ? 'selected' : '') + ">" + value.Name + " </option>";
                    });
                    $('#CurrencyId').html(html);
                }
            })
        }
        function loadAccountNumber(accountId) {
            $.ajax({
                type: "GET",
                url: "/Admin/BankAccounts/GetData",
                data: { account: accountId },
                success: function (res) {
                    console.log(res)
                    var html;
                    $.each(res.data, function (key, value) {
                        html += "<option value = '" + value.BankAccountId + "'  >" + value.Name + " </option>";
                    });
                    $('#BankId').html(html);
                }
            })
        }

        var managerBank = {
            get: function (id) {
                 $.ajax({
                    type: "POST",
                    url: "@Url.Action("FindId", "BankAccounts")",
                    data: {id : id},
                    success: function (res) {
                        $("#Id").val(res.BankAccountId);
                        $("#Balance").val(res.Balance);
                        $("#NameBank").val(res.Name);
                        loadStatus(res.Status);
                        loadCurrency(res.CurrencyId);
                        $("#myModal").modal("show");
                    }

                })
            },
            get2: function (id) {
                 $.ajax({
                    type: "POST",
                    url: "@Url.Action("FindId", "BankAccounts")",
                    data: {id : id},
                    success: function (res) {
                        $("#Id").val(res.BankAccountId);
                        $("#Name").val(res.Name);
                        $("#MoneyManagement").modal("show");
                    }

                })
            },
            post: function (bank) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Create", "BankAccounts")",
                    data: bank,
                    success: function (res) {
                        console.log(bank)
                        if (res.statusCode == 200) {
                            $("#myModal").modal("hide");
                            $('#tbl_banks').DataTable().ajax.reload();
                            notifySuccess('Created Successfully',"Created BankAccounts Successfully")
                        }else {
                            validator.showErrors(res.data);
                        }
                    }

                })
            },
            put: function (bank) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Edit", "BankAccounts")",
                    data: bank,
                    success: function (res) {
                        if (res.statusCode === 200) {
                            $("#myModal").modal("hide");
                            $('#tbl_banks').DataTable().ajax.reload();
                            notifySuccess('Updated Successfully',"Updated BankAccounts Successfully");
                        }else{
                            validator.showErrors(res.data);
                        }
                    }

                })
            },
            delete: function (id) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Delete", "BankAccounts")/"+id,
                    success: function (res) {
                        if (res.statusCode === 200) {
                            notifySuccess('Deleted Successfully',"Deleted BankAccounts Successfully");
                            $('#tbl_banks').DataTable().ajax.reload();
                        }else {
                            notifyError('Error',"Deleted BankAccounts Error");
                            $('#tbl_banks').DataTable().ajax.reload();
                        }

                    }
                })
            },
            receiveMoney: function (trans) {
                $.ajax({
                    type: "POST",
                    url: "/Transactions/Transfers",
                    data: trans,
                    success: function (res) {
                        if (res.statusCode === 200) {
                            $("#MoneyManagement").modal("hide");
                            $('#tbl_banks').DataTable().ajax.reload();
                            notifySuccess("Transfers Successfully", res.data);
                        }else {
                            notifyError("Transfers Error", res.data.FromId);
                        }
                    }

                })
            }
        }

        //Cheque Book
        var managerChequeBook = {
            get: function (id) {
                $.ajax({
                    type: "GET",
                    url: "/Admin/ChequeBooks/FindId",
                    data: { id: id },
                    success: function (res) {
                        console.log(res);
                    }
                })
            },
            put: function (id) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("PutData", "ChequeBooks")",
                    data: {id : id},
                    success: function (res) {
                        if (res.statusCode === 200) {
                            $('#datatablesChequeBook').DataTable().ajax.reload();
                            notifySuccess("Success",res.data);
                        }else{
                            notifyError("Error",res.data);
                        }
                    }

                })
            },
            post: function (chequeBook) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("PostData", "ChequeBooks")",
                    data: chequeBook,
                    success: function (res) {
                        if (res.statusCode === 200) {
                            $('#datatablesChequeBook').DataTable().ajax.reload();
                            notifySuccess("Success", "Created Successfully");
                        }
                    }

                })
            },
            delete: function (id) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("DeleteData", "ChequeBooks")",
                    data: {id : id},
                    success: function (res) {
                        if (res.statusCode === 200) {
                            $('#datatablesChequeBook').DataTable().ajax.reload();
                            notifySuccess("Success", res.data);
                        }else{
                            notifyError("Error", res.data);
                        }
                    }

                })
            },
        }

        $('#datatablesChequeBook').DataTable({
            "paging": true,
            "ordering": true,
            "autoWidth": false,
            "responsive": true,
            "processing": true,
            "filter": true,
            "lengthMenu": [5, 10, 20, 50, 100, 200, 500],
            "ajax": {
                'url': '@Url.Action("GetAccountData", "ChequeBooks")',
                'data': { AccountId: @Model.AccountId},
            },
            "order": [
                [0, 'asc']
            ],
            "columns": [
                {
                    data: 'ChequeBookId',
                    className: 'align-middle text-center'
                },
                {
                    data: 'Code',
                    className: 'align-middle',
                },
                {
                    data: 'AccountName',
                    className: 'align-middle',
                },
                {
                    render: function (data, type, row) {
                        if (row.Status === 0){
                            return '<span class="badge light badge-success"><i class="fa fa-circle text-success mr-1"></i>'+row.StatusName+'</span>';
                        }else {
                            return '<span class="badge light badge-danger"><i class="fa fa-circle text-danger mr-1"></i>'+row.StatusName+'</span>';
                        }
                    },
                    className: 'align-middle text-center',
                    "orderable": false,
                },
                {
                    data: 'ChequesUsed',
                    className: 'align-middle text-center',
                    "orderable": false
                },
                {
                    data: 'ChequeBookId',
                    "render": function (data, type, row) {
                        let toggle = row.Status === 0 ? "Close book" : "Open book";
                        return '<div class="dropdown custom-dropdown mb-0"><div class="btn sharp btn-primary tp-btn" data-toggle="dropdown" aria-expanded="false"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="18px" height="18px" viewBox="0 0 24 24" version="1.1"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><rect x="0" y="0" width="24" height="24"></rect><circle fill="#000000" cx="12" cy="5" r="2"></circle><circle fill="#000000" cx="12" cy="12" r="2"></circle><circle fill="#000000" cx="12" cy="19" r="2"></circle></g></svg></div><div class="dropdown-menu dropdown-menu-right" x-placement="bottom-end" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(40px, 41px, 0px);"><a data-id="' + row.ChequeBookId + '" data-account="' + row.AccountId + '" class="dropdown-item btn-detail-2" href="javascript:void(0);">Details</a><a data-id="' + row.ChequeBookId + '" class="dropdown-item btn-toggle" href="javascript:void(0);">' + toggle + '</a><a data-id="' + row.ChequeBookId + '" class="dropdown-item text-danger btn-delete2" href="javascript:void(0);">Delete</a></div></div>'

                    }
                },
            ]
        });
        $('#tbl_banks').DataTable({
                        "paging": true,
                        "ordering": true,
                        "autoWidth": false,
                        "responsive": true,
                        "processing": true,
                        "filter": true,
                        "lengthMenu": [5, 10, 20, 50, 100, 200, 500],
                        "ajax": {
                                url: "@Url.Action("GetData", "BankAccounts")",
                                data: {account : @Model.AccountId},
                        },
                        "order": [
                            [0, 'asc']
                        ],
                        "columns": [
                            {
                                data: 'BankAccountId',
                                className: 'align-middle text-center'
                            },
                            {
                                data: 'Name',
                                className: 'align-middle text-center'
                            },
                            {
                                //data: 'Balance',
                                render: function (data, type, row) {
                                    return Intl.NumberFormat('vi-VN', { style: 'currency', currency: row.CurrencyName }).format(row.Balance);
                                },
                                className: 'align-middle text-center',
                            },
                            {
                                data: 'CurrencyName',
                                className: 'align-middle text-center',
                            },
                            {
                                render: function (data, type, row) {
                                    if (row.Status === 0) {
                                        return '<span class="badge light badge-success"><i class="fa fa-circle text-success mr-1"></i>' + row.StatusName + '</span>';
                                    } else if (row.Status === 1) {
                                        return '<span class="badge light badge-danger"><i class="fa fa-circle text-danger mr-1"></i>' + row.StatusName + '</span>';
                                    } else if (row.Status === 2) {
                                        return '<span class="badge light badge-light"><i class="fa fa-circle text-danger mr-1"></i>' + row.StatusName + '</span>';
                                    } else {
                                        return '<span class="badge light badge-dark"><i class="fa fa-circle text-danger mr-1"></i>' + row.StatusName + '</span>';
                                    }
                                },
                                //data: 'StatusName',
                                className: 'align-middle text-center',
                                "searchable": false,
                                "orderable": false,
                            },
                            {
                                data: {BankAccountId:'BankAccountId'},
                                "render": function (data) {
                                    let detail = "@Url.Action("ProfileAccountNumber", "Transactions")/"+data.BankAccountId;
                                    return '<div class="dropdown custom-dropdown mb-0"><div class="btn sharp btn-primary tp-btn" data-toggle="dropdown" aria-expanded="false"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="18px" height="18px" viewBox="0 0 24 24" version="1.1"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><rect x="0" y="0" width="24" height="24"></rect><circle fill="#000000" cx="12" cy="5" r="2"></circle><circle fill="#000000" cx="12" cy="12" r="2"></circle><circle fill="#000000" cx="12" cy="19" r="2"></circle></g></svg></div><div class="dropdown-menu dropdown-menu-right" x-placement="bottom-end" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(40px, 41px, 0px);">' +
                                        '<a data-id="' + data.BankAccountId +'" class="dropdown-item btn-manager text-info" href="javascript:void(0);" >Money Managment</a>' +
                                        '<a href="' + detail +'" class="dropdown-item btn-detail text-primary" >Details</a>' +
                                        '<a  data-id="' + data.BankAccountId +'" class="dropdown-item btn-edit text-warning" href="javascript:void(0);">Edit</a>' +
                                        '<a  data-id="' + data.BankAccountId +'" class="dropdown-item text-danger btn-delete btn-delete" href="javascript:void(0);">Delete</a></div></div>'
                                     }
                            },
                        ]
                    });

        $(function () {
            // Cheques Books
            $(document).on("click", ".btn-detail-2", function () {
                let bookId = $(this).data("id");
                window.location.assign("/Admin/Cheques/?ChequeBookId=" + bookId + "&AccountId=" + @Model.AccountId);
            })

            $(document).on("click", "#btnAddChequeBook", function () {
                let chequebook = {
                    AccountId: @Model.AccountId,
                };
                managerChequeBook.post(chequebook);
            })

            $(document).on("click", ".btn-toggle", function () {
                let bookId = $(this).data("id");
                managerChequeBook.put(bookId);
            })
            //Account Number

            $(document).on("click", ".btn-add", function () {
                loadStatus();
                loadCurrency();
                $("#FormBank").trigger("reset");
                $("#type").val("CREATE");
                validator.resetForm();
                $("#myModal").modal("show");
                $(".modal-title").html("Create Account Number");
            })

            $(document).on("click", ".btn-edit", function () {
                $("#type").val("EDIT");
                let bankId = $(this).data("id");
                let a = managerBank.get(bankId);
            })

            $(document).on("click", ".btn-manager", function () {
                $("#type").val("TRANSFER");
                let bankId = $(this).data("id");
                let a = managerBank.get2(bankId);
            })

            $(document).on("click", ".btn-delete", function () {
                let BankId = $(this).data("id");
                managerBank.delete(BankId);
            });

            $(document).on("click", ".btn-delete2", function () {
                let bookId = $(this).data("id");
                managerChequeBook.delete(bookId);
            })
        })
    </script>
}