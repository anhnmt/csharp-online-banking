@model OnlineBanking.DAL.ProfileBankAccountViewModels
@{
    ViewBag.Title = "ProfileBankAccount";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section css{
    <link href="~/Content/vendor/datatables/css/jquery.dataTables.min.css" rel="stylesheet" />
}
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Profile Account Number</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
                        <li class="breadcrumb-item active">Profile Account Number</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-md-3">
                <div class="card card-success">
                    <div class="card-header">
                        <h3 class="card-title">Account Profile</h3>
                    </div>
                    <div class="card-body">
                        <div class="form-horizontal">
                            <div class="form-group">
                                <strong>Bank Account Number: </strong> @Model.Name
                            </div>
                            <div class="form-group">
                                <strong>Account Name: </strong> @Model.AccountName
                            </div>
                            <div class="form-group">
                                <strong>Balance: </strong> @string.Format("{0:0,0}", Model.Balance)
                            </div>
                            <div class="form-group">
                                <strong>Currency: </strong> @Model.CurrencyName
                            </div>
                            <div class="form-group">
                                <strong>Status: </strong> @Model.StatusName
                            </div>
                            <div class="form-group">
                                <strong>CreatedAt: </strong> @Model.CreatedAt
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-9">
                <div class="card card-info">
                    <div class="card-header">
                        <h3 class="card-title">Total Transaction History</h3>
                    </div>
                    <div class="card-body">
                        <input type="hidden" name="Id" id="fromId" value="@Model.BankAccountId" />
                        <div class="form-horizontal">
                            <table class="table table-hover" id="datatables">
                                <thead>
                                    <tr>
                                        <th>No</th>
                                        <th>CreatedAt</th>
                                        <th>Messages</th>
                                        <th>Amount </th>
                                        <th>Banlanced </th>
                                        <th>Status </th>
                                    </tr>
                                </thead>
                                <tbody id="tbl_trans"></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
@section scripts{
    <script src="~/Content/vendor/datatables/js/jquery.dataTables.min.js"></script>
    <script>
        $(function () {
            $('#datatables').DataTable({
                "paging": true,
                "ordering": true,
                "autoWidth": false,
                "responsive": true,
                "processing": true,
                "filter": true,
                "lengthMenu": [5, 10, 20, 50, 100, 200, 500],
                "ajax": {
                    url: "/Transactions/GetData",
                    data:
                        function (d) {
                            d.fromId = $("#fromId").val();
                        }

                },
                "order": [
                    [1, 'desc']
                ],
                "columns": [
                    {
                        data: 'TransactionId',
                        className: 'align-middle text-center'
                    },
                    {
                        data: 'CreatedAt',
                        className: 'align-middle',
                    },
                    {
                        data: 'Messages',
                        className: 'align-middle',
                    },
                    {
                        data: { Amount: 'Amount', FromId: 'FromId' },
                        render: function (data) {
                            let fromId = $("#fromId").val();
                            return (data.Amount) == null ? "" : ((data.FromId == fromId) ? " - " : " + ") + new Intl.NumberFormat('vi-VN', { style: 'currency', currency: "VND" }).format(data.Amount)
                        },
                        className: 'align-middle',
                    },
                    {
                        data: { FromId: 'FromId', BalancedFrom: "BalancedFrom", BalancedTo: "BalancedTo" },
                        render: function (data) {
                            let fromId = $("#fromId").val();
                            return ((data.FromId == fromId) ? new Intl.NumberFormat("vi-VN", { style: "currency", currency: "VND" }).format(data.BalancedFrom) : new Intl.NumberFormat("vi-VN", { style: "currency", currency: "VND" }).format(data.BalancedTo))
                        },
                        className: 'align-middle',
                        "searchable": false,
                        "orderable": false
                    },
                    {
                        data: 'StatusName',
                        className: 'align-middle text-center',
                        "searchable": false,
                        "orderable": false
                    },

                ]
            })


            //if (fromId != null) {
            //    managerTran.load(fromId);
            //}

            $("#key").keyup(function () {
                let key = $("#key").val();
                managerTran.load(fromId, 1, key);
            })
            $(document).on("click", ".item-page", function () {
                let page = $(this).text();
                let key = $("#key").val();
                managerTran.load(fromId, page, key);
            })
            $(document).on("click", ".btn-test", function () {
                $("#Form").trigger("reset");
                document.getElementById('text1').hidden = true;
                document.getElementById('text2').hidden = true;
                document.getElementById('infoReceiver').hidden = true;
                document.getElementById('infoSource').hidden = true;
                loadAccountNumber(1);
                $(".modal-title").html("Tranfer Money");
                $("#myModal").modal("show");
            })
            $(document).on('change', '#FromId', function () {
                let dataBalance = loadBalance(this.value)
                document.getElementById('text1').hidden = false;
                document.getElementById('infoSource').hidden = false;
                document.getElementById('infoSource').innerHTML = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: dataBalance[0].Currency }).format(dataBalance[0].Balance);
            });
            $(document).on('blur keydown', '#ToId', function () {
                let dataInfoBankAccount;
                if (this.value.length == 0) {
                    document.getElementById('text2').hidden = true;
                    document.getElementById('infoReceiver').hidden = true;
                } else {
                    dataInfoBankAccount = loadInfoBankAccount(this.value)
                    document.getElementById('text2').hidden = false;
                }
                if (dataInfoBankAccount.length > 0) {
                    $("#BankId").val(dataInfoBankAccount[0].Id);
                    document.getElementById('infoReceiver').hidden = false;
                    document.getElementById('infoReceiver').innerHTML = dataInfoBankAccount[0].Name;
                } else {
                    $("#BankId").val("");
                    document.getElementById('infoReceiver').hidden = false;
                    document.getElementById('infoReceiver').innerHTML = "Account doesn't exist";
                }
            });
            $(document).on("click", "#btnSave", function () {
                var today = new Date();
                var tran = {
                    FromId: $("#FromId").val(),
                    ToId: $("#BankId").val(),
                    Amount: $("#Amount").val()
                }
                //managerTran.post(tran);
                for (var i = 0; i < 10; i++) {
                    setTimeout(managerTran.post(tran), 5000);
                }


            })
        })
    </script>
}
