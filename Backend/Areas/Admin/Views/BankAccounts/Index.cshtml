@model OnlineBanking.DAL.AccountViewModel
@using OnlineBanking.DAL
@{ var user = (Accounts)Session["user"]; }
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section css{
    <link href="~/Content/vendor/datatables/css/jquery.dataTables.min.css" rel="stylesheet" />
}


<div class="page-titles">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
        <li class="breadcrumb-item active"><a href="javascript:void(0)">Bank Account Managerment</a></li>
    </ol>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="card card-success">
            <div class="card-header">
                <h3 class="card-title">Bank Accounts Management</h3>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="display table-responsive-lg min-w850 dataTable no-footer" id="datatables" role="grid" aria-describedby="example4_info">
                        <thead>
                            <tr>
                                <th>No</th>
                                <th>Name</th>
                                <th>Currency</th>
                                <th>Banlanced </th>
                                <th>Status </th>
                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" id="FormBank" novalidate="novalidate">
                <div class="modal-header">
                    <h4 class="modal-title">Update Infomation Account</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="Id" id="Id" value=""/>
                    <input type="hidden" name="type" id="type" value="CREATE"/>
                    <div class="form-group">
                        <label>Account Number</label>
                        <div class="error">
                            <input type="text" class="form-control" id="NameBank" name="NameBank" placeholder="Account Number...">
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Balance</label>
                        <div class="error">
                            <input type="text" class="form-control" id="Balance" name="Balance" placeholder="Balance...">
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-6">
                                <label>Currency</label>
                                <select class="form-control" id="CurrencyId" name="CurrencyId">
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label>Status</label>
                                <select class="form-control" id="Status" name="StatusBank">
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success" >Save</button>
                    <button type="button" class="btn btn-warning" data-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="MoneyManagement" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" id="Form2" novalidate="novalidate">
                <div class="modal-header">
                    <h4 class="modal-MoneyManagement">Update Infomation Account</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="BankAccountId" id="BankAccountId" value=""/>
                    <input type="hidden" name="type" id="type" value="CREATE"/>
                    <div class="form-group">
                        <label>Account Number</label>
                        <div class="error">
                            <input type="text" class="form-control" id="Id" name="BankAccountId" placeholder="Balance..." disabled>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Balance</label>
                        <div class="error">
                            <input type="text" class="form-control" id="Amount" name="Amount" placeholder="Balance...">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-warning" data-dismiss="modal">Cancel</button>
                </div>
             </form>
        </div>
    </div>
</div>
@section AdminlteJs{
    <script src="~/Content/vendor/datatables/js/jquery.dataTables.min.js"></script>
}

@section scripts{
    <script>
        const validator = $("#FormBank").validate({
                    rules: {
                        "NameBank": {
                            required: true
                        },
                        "Balance": {
                            required: true
                        },
                    },
                    ignore: [],
                    errorClass: "invalid-feedback animated fadeInUp",
                    errorElement: "div",
                    errorPlacement: function (e, a) {
                        jQuery(a).after(e)
                    },
                    highlight: function (e) {
                        jQuery(e).closest(".form-group").removeClass("is-invalid").addClass("is-invalid")
                    },
                    success: function (e) {
                        jQuery(e).closest(".form-group").removeClass("is-invalid").addClass("is-valid")
                    },
        
                    submitHandler: function () {
                       var bank = {
                           CurrencyId: $("#CurrencyId").val(),
                           Status: parseInt(($("#Status").val())),
                           Balance: $("#Balance").val(),
                           Name: $("#NameBank").val()
                       };
                       if ($("#type").val() === "EDIT") {
                           bank.BankAccountId = $("#Id").val();
                           managerBank.put(bank);
                       }  else {
                           managerBank.post(bank);
                       }
                    }
                });
        const validator2 = $("#Form2").validate({
                            rules: {
                                "Amount": {
                                    required: true
                                },
                            },
                            ignore: [],
                            errorClass: "invalid-feedback animated fadeInUp",
                            errorElement: "div",
                            errorPlacement: function (e, a) {
                                jQuery(a).after(e)
                            },
                            highlight: function (e) {
                                jQuery(e).closest(".form-group").removeClass("is-invalid").addClass("is-invalid")
                            },
                            success: function (e) {
                                jQuery(e).closest(".form-group").removeClass("is-invalid").addClass("is-valid")
                            },
                
                            submitHandler: function () {
                               var trans = {
                                   FromId: "@user.AccountId",
                                   Amount: $("#Amount").val(),
                                   ToId: $("#BankId").val(),
                               };
                               managerBank.receiveMoney(trans);
                            }
                        });
        function loadStatus(status = null) {
            $.ajax({
                type: "GET",
                url: "/Admin/Accounts/GetStatus",
                success: function (res) {
                    console.log(res)
                    let html;
                    $.each(res, function (key, value) {
                        html += "<option value = '" + key + "' " + ((parseInt(status)) === key ? 'selected' : '') + ">" + value + " </option>";
                    });
                    $('#Status').html(html);
                }
            })
        }
        function loadCurrency(CurrencyId = null, page = 1, key = null, pageSize = 100) {
            $.ajax({
                type: "GET",
                url: "/Admin/Currencies/GetData",
                data: { page: page, key: key, pageSize: pageSize},
                success: function (res) {
                    var html;
                    $.each(res.data, function (key, value) {
                        html += "<option value = '" + value.CurrencyId + "' " + ((parseInt(CurrencyId))=== value.CurrencyId ? 'selected' : '') + ">" + value.Name + " </option>";
                    });
                    $('#CurrencyId').html(html);
                }
            })
        }

        var managerBank = {
            get: function (id) {
                 $.ajax({
                    type: "POST",
                    url: "@Url.Action("FindId", "BankAccounts")",
                    data: {id : id},
                    success: function (res) {
                        $("#Id").val(res.BankAccountId);
                        $("#Balance").val(res.Balance);
                        $("#NameBank").val(res.Name);
                        loadStatus(res.Status);
                        loadCurrency(res.CurrencyId);
                        $("#myModal").modal("show");
                    }

                })
            },
            put: function (bank) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Edit", "BankAccounts")",
                    data: bank,
                    success: function (res) {
                        if (res.statusCode === 200) {
                            $("#myModal").modal("hide");
                            $('#datatables').DataTable().ajax.reload();
                            notifySuccess('Updated Successfully',"Updated BankAccounts Successfully");
                        }else{
                            validator.showErrors(res.data);
                        }
                    }
    
                })
            },
            delete: function (id) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("Delete", "BankAccounts")/"+id,
                success: function (res) {
                    if (res.statusCode === 200) {
                        notifySuccess('Deleted Successfully',"Deleted BankAccounts Successfully");
                    }else {
                        notifyError('Error',"Deleted BankAccounts Error");
                    }
                     $('#datatables').DataTable().ajax.reload();
                }
            })
        },
        }
        $(function () {
            $('#datatables').DataTable({
                "paging": true,
                "ordering": true,
                "autoWidth": false,
                "responsive": true,
                "processing": true,
                "filter": true,
                "lengthMenu": [5, 10, 20, 50, 100, 200, 500],
                "ajax": "/Admin/BankAccounts/GetAllData",
                "order": [
                    [0, 'asc']
                ],
                "columns": [
                    {
                        data: 'BankAccountId',
                        className: 'align-middle text-center'
                    },
                    {
                        data: 'Name',
                        className: 'align-middle text-center'
                    },
                    {
                        data: 'CurrencyName',
                        className: 'align-middle',
                    },
                    {
                        data: { Balance: 'Balance', CurrencyName:"CurrencyName"},
                        render: function (data) {
                            return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: data.CurrencyName }).format(data.Balance)
                        },
                        className: 'align-middle',
                    },
                    {
                        data: 'StatusName',
                        className: 'align-middle',
                        "searchable": false,
                        "orderable": false
                    },
                    {
                        data: {BankAccountId:'BankAccountId'},
                        "render": function ( data) {
                            return '<div class="dropdown custom-dropdown mb-0"><div class="btn sharp btn-primary tp-btn" data-toggle="dropdown" aria-expanded="false"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="18px" height="18px" viewBox="0 0 24 24" version="1.1"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><rect x="0" y="0" width="24" height="24"></rect><circle fill="#000000" cx="12" cy="5" r="2"></circle><circle fill="#000000" cx="12" cy="12" r="2"></circle><circle fill="#000000" cx="12" cy="19" r="2"></circle></g></svg></div><div class="dropdown-menu dropdown-menu-right" x-placement="bottom-end" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(40px, 41px, 0px);">' +
                                '<a data-id="'+data.BankAccountId+'" class="dropdown-item btn-manager" href="javascript:void(0);" >Money Managment</a>' +
                                '<a data-id="' + data.BankAccountId + '" class="dropdown-item btn-detail" href="javascript:void(0);">Details</a>' +
                                '<a  data-id="'+data.BankAccountId+'" class="dropdown-item btn-edit" href="javascript:void(0);">Edit</a>' +
                                '<a data-id="' + data.BankAccountId + '" class="dropdown-item text-danger btn-delete" href="javascript:void(0);">Delete</a></div></div>'
                        }
                    },
                ]
            })

            $(document).on("click", ".btn-edit", function () {
                $("#type").val("EDIT");
                let bankId = $(this).data("id");
                let a = managerBank.get(bankId);
            })

            $(document).on("click", ".btn-detail", function () {
                let userId = $(this).data("id");
                window.location.assign("/Admin/BankAccounts/ProfileBankAccount/" + userId)
            })
            $(document).on("click", ".btn-delete", function () {
                let BankId = $(this).data("id");
                managerBank.delete(BankId);
            });
            $(document).on("click", ".btn-manager", function () {
                $("#type").val("TRANSFER");
                $("#MoneyManagement").modal("show");
                $(".modal-MoneyManagement").html("Money management");

            })
        })

    </script>
}