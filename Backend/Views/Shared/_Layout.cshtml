@using OnlineBanking.DAL
@{ var user = (Accounts) Session["user"]; }

<!DOCTYPE html>
<html lang="en">

<meta http-equiv="content-type" content="text/html;charset=UTF-8"/>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Online Banking - Group 1 - C1905M BKAP</title>

    <meta name="description" content="Some description for the page"/>
    <!-- Favicon icon -->
    <link rel="icon" type="image/png" sizes="16x16" href="~/Content/images/favicon.png">
    @RenderSection("css", false)
    @RenderSection("customCss", false)
    <link href="~/Content/vendor/bootstrap-select/dist/css/bootstrap-select.min.css" rel="stylesheet" type="text/css"/>
    <link href="~/Content/vendor/jquery-smartwizard/dist/css/smart_wizard.min.css" rel="stylesheet" type="text/css"/>
    <link href="~/Content/vendor/datatables/css/jquery.dataTables.min.css" rel="stylesheet"/>
    <link href="~/Content/custom/notify/css/OverlayScrollbars.min.css" rel="stylesheet"/>
    <link href="~/Content/custom/notify/css/prism.css" rel="stylesheet"/>
    <link href="~/Content/custom/notify/css/simple-notify.min.css" rel="stylesheet"/>
    <link href="~/Content/custom/notify/css/reset.css" rel="stylesheet"/>
    <link href="~/Content/css/style.css" rel="stylesheet" type="text/css"/>

    <style>
        .chat-popup {
            position: fixed !important;
            bottom: 0;
            right: 0;
        }

        .chat-icon {
            background: #2953e8;
            border-radius: 50%;
            padding: 20px;
            margin: 20px;
        }

            .chat-icon i {
                font-size: 35px;
                color: #fff;
            }
    </style>
</head>

<body>
<div id="preloader">
    <div class="sk-three-bounce">
        <div class="sk-child sk-bounce1"></div>
        <div class="sk-child sk-bounce2"></div>
        <div class="sk-child sk-bounce3"></div>
    </div>
</div>
<div id="main-wrapper">
    <div class="nav-header">
        <a href="@Url.Action("Index", "Home")" class="brand-logo">
            <img class="logo-abbr" src="~/Content/images/logo.png" alt="">
            <img class="logo-compact" src="~/Content/images/logo-text.png" alt="">
            <img class="brand-title" src="~/Content/images/logo-text.png" alt="">

        </a>

        <div class="nav-control">
            <div class="hamburger">
                <span class="line"></span><span class="line"></span><span class="line"></span>
            </div>
        </div>
    </div>

    <div class="header">
        <div class="header-content">
            <nav class="navbar navbar-expand">
                <div class="collapse navbar-collapse justify-content-between">
                    <div class="header-left">
                        <div class="dashboard_bar"></div>
                    </div>
                    <ul class="navbar-nav header-right">
                        <li class="nav-item dropdown notification_dropdown">
                            <a class="nav-link  ai-icon" href="javascript:void(0)" role="button" data-toggle="dropdown">
                                <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M23.3333 19.8333H23.1187C23.2568 19.4597 23.3295 19.065 23.3333 18.6666V12.8333C23.3294 10.7663 22.6402 8.75902 21.3735 7.12565C20.1068 5.49228 18.3343 4.32508 16.3333 3.80679V3.49996C16.3333 2.88112 16.0875 2.28763 15.6499 1.85004C15.2123 1.41246 14.6188 1.16663 14 1.16663C13.3812 1.16663 12.7877 1.41246 12.3501 1.85004C11.9125 2.28763 11.6667 2.88112 11.6667 3.49996V3.80679C9.66574 4.32508 7.89317 5.49228 6.6265 7.12565C5.35983 8.75902 4.67058 10.7663 4.66667 12.8333V18.6666C4.67053 19.065 4.74316 19.4597 4.88133 19.8333H4.66667C4.35725 19.8333 4.0605 19.9562 3.84171 20.175C3.62292 20.3938 3.5 20.6905 3.5 21C3.5 21.3094 3.62292 21.6061 3.84171 21.8249C4.0605 22.0437 4.35725 22.1666 4.66667 22.1666H23.3333C23.6428 22.1666 23.9395 22.0437 24.1583 21.8249C24.3771 21.6061 24.5 21.3094 24.5 21C24.5 20.6905 24.3771 20.3938 24.1583 20.175C23.9395 19.9562 23.6428 19.8333 23.3333 19.8333Z" fill="#67636D"/>
                                    <path d="M9.98193 24.5C10.3863 25.2088 10.971 25.7981 11.6767 26.2079C12.3823 26.6178 13.1839 26.8337 13.9999 26.8337C14.816 26.8337 15.6175 26.6178 16.3232 26.2079C17.0289 25.7981 17.6136 25.2088 18.0179 24.5H9.98193Z" fill="#67636D"/>
                                </svg>
                                <span class="badge light text-white bg-primary rounded-circle" id="countNotifications">0</span>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right">
                                <div id="dlab_W_Notification1" class="widget-media dlab-scroll p-3 max-height380 ps ps-trap">
                                    <ul class="timeline" id="notifications"></ul>
                                </div>
                                <a class="all-notification" href="@Url.Action("Index", "Notifications")">See all notifications <i class="ti-arrow-right"></i></a>
                            </div>
                        </li>
                        <li class="nav-item dropdown header-profile">
                            <a class="nav-link" href="javascript:void(0)" role="button" data-toggle="dropdown">
                                <img src="~/Content/images/profile/17.jpg" width="20" alt=""/>
                                <div class="header-info">
                                    <span class="text-black">@user.Name</span>
                                    <p class="fs-12 mb-0 ">@user.Email</p>
                                </div>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right">
                                <a href="@Url.Action("InfoAccount", "Home")" class="dropdown-item ai-icon">
                                    <svg id="icon-user1" xmlns="http://www.w3.org/2000/svg" class="text-primary" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle>
                                    </svg>
                                    <span class="ml-2">Profile </span>
                                </a>
                                <a href="@Url.Action("Logout", "Home", new {Area = ""})" class="dropdown-item ai-icon">
                                    <svg id="icon-logout" xmlns="http://www.w3.org/2000/svg" class="text-danger" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path><polyline points="16 17 21 12 16 7"></polyline><line x1="21" y1="12" x2="9" y2="12"></line>
                                    </svg>
                                    <span class="ml-2">Logout </span>
                                </a>
                            </div>
                        </li>

                    </ul>

                </div>
            </nav>
        </div>
    </div>
    <div class="dlabnav pt-xl-0">
        <div class="dlabnav-scroll">
            <ul class="metismenu" id="menu">
                <li>
                    <a href="@Url.Action("Index", "Home")" class="ai-icon" aria-expanded="false">
                        <i class="flaticon-381-home"></i>
                        <span class="nav-text">Dashboard</span>
                    </a>
                </li>
                <li>
                    <a href="@Url.Action("Index", "ChequeBooks", new {Area = ""})" class="ai-icon" aria-expanded="false">
                        <i class="flaticon-381-book"></i>
                        <span class="nav-text">Cheque Book</span>
                    </a>
                </li>
                <li>
                    <a href="@Url.Action("Index", "Transactions")" class="ai-icon" aria-expanded="false">
                        <i class="flaticon-381-transfer"></i>
                        <span class="nav-text">Transfer</span>
                    </a>
                </li>
            </ul>
        </div>
    </div>
    <div class="content-body">
        <!-- row -->

        <div class="container-fluid">
            @RenderBody()
        </div>
    </div>
    <div class="footer">
        <div class="copyright">
            <p>Made with <span class="heart"></span> by C1905M BKAP - Group 1</p>
        </div>
    </div>

    <div class="chat-popup">
        <div class="chat-icon" style="display: none;">
            <i class="fas fa-comment-smile"></i>
        </div>
    </div>

    <div id="chat-list" class="chat-popup col-md-6 col-lg-5 col-xl-5" style="display: none;">
        <div class="row">
            <div class="col-xl-12">
                <div class="card message-bx chat-box">
                    <div class="card-header d-sm-flex d-block shadow-sm">
                        <div>
                            <h4 class="fs-20 mb-0 font-w600 text-black mb-sm-0 mb-2">Chat Support</h4>
                        </div>

                        <button type="button" class="close btn-close" data-dismiss="modal">
                            <span>×</span>
                        </button>
                    </div>
                    <div class="card-body dlab-scroll height520 ps ps--active-y ps-trap" id="discussion">
                    </div>
                    <div class="card-footer border-0 type-massage">
                        <form id="chat" onsubmit="return false;">
                            <div class="input-group">
                                <textarea id="message" name="message" class="form-control" placeholder="Type message..."></textarea>
                                <input type="hidden" id="channel" name="channel" value="0">
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<script src="~/Content/vendor/global/global.min.js" type="text/javascript"></script>
<script src="~/Content/vendor/bootstrap-select/dist/js/bootstrap-select.min.js" type="text/javascript"></script>
<script src="~/Content/vendor/jquery-validation/jquery.validate.min.js" type="text/javascript"></script>
<script src="~/Content/vendor/moment/moment.min.js" type="text/javascript"></script>
<script src="~/Content/js/custom.js" type="text/javascript"></script>
<script src="~/Content/js/dlabnav-userInit.js" type="text/javascript"></script>
<script src="~/Content/custom/notify/js/simple-notify.min.js"></script>
<script src="~/Content/custom/notify/js/OverlayScrollbars.min.js"></script>
<script src="~/Content/custom/notify/js/prism.js"></script>
<script src="~/Content/custom/custom-notify.js"></script>
<script src="~/Content/vendor/datatables/js/jquery.dataTables.min.js"></script>
@RenderSection("Scripts", false)

@if (user.AccountId != null)
{
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            $.connection.hub.qs = { "userId": '@user.AccountId' };

            let connection = $.connection;
            let chatHub = connection.chatHub;
            let accountId = connection.hub.qs.userId;

            $("#message").keypress(function (e) {
                if (e.which === 13 && !e.shiftKey) {
                    e.preventDefault();

                    $("#chat").submit();
                }
            });

            chatHub.client.updateUser = function (userView) {
                $("#channel").val(userView.CurrentChannelId);
            };

            // Create a function that the hub can call back to display messages.
            chatHub.client.newMessage = function (messageView) {
                let msg = connvertMessage(accountId, messageView);

                $('#discussion')
                    .append(msg)
                    .ready(function () {
                        $('#discussion').animate({ scrollTop: $('#discussion').prop("scrollHeight") }, 150);
                    });
            };

            // Create a function that the hub can call back to display messages.
            chatHub.client.historyMessages = function (historyMessages) {
                console.log(historyMessages.length);
                if (historyMessages.length >= 10) {
                    $('#discussion')
                        .html('<button type="button" class="btn btn-primary btn-sm btn-block mb-3 btn-loadmore">Load more message!</button>');
                }
                let msg = "";

                for (let messageView of historyMessages) {
                    msg += connvertMessage(accountId, messageView);
                }

                $('#discussion').append(msg);
            };
            
            // Create a function that the hub can call back to display messages.
            chatHub.client.newMessage = function (messageView) {
                let msg = connvertMessage(accountId, messageView);

                $('#discussion')
                    .append(msg)
                    .ready(function () {
                        $('#discussion').animate({ scrollTop: $('#discussion').prop("scrollHeight") }, 150);
                    });
            };

            // Create a function that the hub can call back to display messages.
            chatHub.client.newNotification = function (notificationView) {
                $("#nothing_here").hide().remove();
                let count = $("#countNotifications").html()*1 ?? 0;
                
                count += notificationView.Status ?? 0;
                let msg = connvertNotification(notificationView);

                $('#countNotifications').html(count);
                $('#notifications').prepend(msg);
            };
            
            // Create a function that the hub can call back to display messages.
            chatHub.client.historyNotifications = function (historyNotifications) {
                let count = 0;
                let msg = "";
                $('#notifications').html("");
                
                if (historyNotifications.length > 0) {
                    for (let notificationView of historyNotifications) {
                        count += notificationView.Status ?? 0;
                        msg += connvertNotification(notificationView);
                    }
                } else {
                    msg += `<li class="text-center" id="nothing_here">
                                Nothing here...
                            </li>`;
                }

                $('#countNotifications').html(count);
                $('#notifications').append(msg);
            };

            connection.hub.start().done(function () {
                $('#chat').submit(function (event) {
                    if ($('#message').val() !== "") {
                        chatHub.server.sendPrivate($('#message').val());
                        // Clear text box and reset focus for next comment.
                        $('#message').val('').focus();
                    }
                    event.preventDefault();
                });

                $(".chat-icon").show();

                $(".chat-icon").click(function () {
                    $("#chat-list").show();
                    $(this).hide();
                    $('#message').focus();
                    $('#discussion').animate({ scrollTop: $('#discussion').prop("scrollHeight") }, 150);
                });

                $(document).on("click", "#chat-list .btn-close", function () {
                    $(".chat-icon").show();
                    $("#chat-list").hide();
                });
            });

            connection.hub.disconnected(function () {
                setTimeout(function () {
                    connection.hub.start();
                }, 3000); // Restart connection
            });
            
            $(document).on("click", ".read-notification", function () {
                let notificationId = $(this).data("notification")*1;
                
                console.log(notificationId);

                chatHub.server.readNotification(notificationId ?? 0).done(function (redirectUrl) {
                    console.log(redirectUrl);
                    
                    if (redirectUrl) {
                        window.location.href = redirectUrl;
                    }
                });
            });

            $(document).on("click", "#discussion .btn-loadmore", function () {
                $(this).hide().remove();
                let firstMsg = $(".direct-chat-msg").first().data("message");

                chatHub.server.getMessageHistory($("#channel").val(), firstMsg ?? 0).done(function (historyMessages) {
                    let msg = "";

                    for (let messageView of historyMessages) {
                        msg += connvertMessage(accountId, messageView);
                    }

                    $('#discussion').prepend(msg);

                    if (historyMessages.length >= 10) {
                        $('#discussion')
                            .prepend('<button type="button" class="btn btn-primary btn-sm btn-block mb-3 btn-loadmore">Load more message!</button>');
                    }
                });
            });

            function connvertNotification(notificationView) {
                return `<li class="read-notification" data-notification="${notificationView.NotificationId}">
                           <div class="timeline-panel">
                               <div class="media-body">
                                   <h6 class="mb-1">${notificationView.Content}</h6>
                                   <small class="d-block">${notificationView.CreatedAt}</small>
                               </div>
                           </div>
                       </li>`;
            }
            
            function connvertMessage(accountId, messageView) {
                var image = `<div class="image-bx ${accountId == messageView.AccountId ? 'ml-sm-4 ml-2 mb-4' : 'mr-sm-4 mr-2'}">
                                <img src="https://vora.dexignlab.com/laravel/demo/images/users/9.png" alt="" class="rounded-circle img-1">
                                <span class="active"></span>
                            </div>`;

                return `
                        <div class="direct-chat-msg media mb-4 justify-content-${accountId == messageView.AccountId ? 'end' : 'start'}
                                align-items-${accountId == messageView.AccountId ? 'end' : 'start'}" data-message="${messageView.MessageId}">
                            ${accountId == messageView.AccountId ? '' : image}
                            <div class="${accountId == messageView.AccountId ? 'message-sent' : 'message-received'}">
                                <p class="mb-1">
                                    ${htmlEncode(messageView.Content)}
                                </p>
                                <span class="fs-12">${momentFromNow(messageView.Timestamp ?? "")}</span>
                            </div>
                            ${accountId == messageView.AccountId ? image : ''}
                        </div>`;
            }
        });
    </script>
}
</body>
</html>