@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using OnlineBanking.DAL
@{ var user = (Accounts) Session["user"]; }

@section customCss{
    @* <link href="~/Content/custom/notify/css/line.min.css" rel="stylesheet"/> *@
    <link href="~/Content/custom/notify/css/OverlayScrollbars.min.css" rel="stylesheet"/>
    <link href="~/Content/custom/notify/css/prism.css" rel="stylesheet"/>
    <link href="~/Content/custom/notify/css/simple-notify.min.css" rel="stylesheet"/>
    <link href="~/Content/custom/notify/css/reset.css" rel="stylesheet"/>
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Funds Transfer</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "Home")">Home</a>
                    </li>
                    <li class="breadcrumb-item active">Funds Transfer</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">
    <div class="col-md-12">
        <div class="card card-success">
            <form method="post" id="Form" novalidate="novalidate">
                <div class="card-header">
                    <h3 class="card-title">Funds Transfer</h3>
                </div>
                <div class="card-body">
                    <input type="hidden" name="type" id="type" value="CREATE"/>

                    <div class="form-group">
                        <label>Source Account</label>
                        <div class="error">
                            <select class="form-control" id="FromId" name="FromId" placeholder="Account Number...">
                                <option value="" selected>Choose here</option>
                            </select>
                        </div>
                        <span class="text-dark font-weight-bold" id="text1" style="display: none">Balance: </span>
                        <span class="text-danger font-weight-bold" id="infoSource" style="display: none"></span>
                    </div>
                    <div class="form-group">
                        <label>Receiver Infomation </label>
                        <div class="error">
                            <input type="text" class="form-control" id="ToId" name="ToId" placeholder="Receiver Account..." disabled>
                        </div>
                        <input type="hidden" class="form-control" id="BankId">
                        <span class="text-dark font-weight-bold" id="text2" style="display: none">Name: </span>
                        <span class="text-danger font-weight-bold" id="infoReceiver" style="display: none"></span>
                    </div>
                    <div class="form-group">
                        <label>Amount </label>
                        <div class="error">
                            <input type="text" class="form-control Amount" id="Amount" name="Amount" placeholder="Amount..." disabled>
                        </div>
                        <span class="text-danger font-weight-bold"></span>
                    </div>
                    <div class="form-group">
                        <label>Messages </label>
                        <div class="error">
                            <input type="text" class="form-control" id="Messages" name="Messages" placeholder="Messages..." disabled>
                        </div>
                        <span class="text-danger font-weight-bold"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success toastrDefaultSuccess" id="btnSave">Transfer</button>
                </div>
            </form>
        </div>
    </div>
</section>

@section scripts{
    <script src="~/Content/custom/notify/js/simple-notify.min.js"></script>
    <script src="~/Content/custom/notify/js/OverlayScrollbars.min.js"></script>
    <script src="~/Content/custom/notify/js/prism.js"></script>
    <script src="~/Content/custom/custom-notify.js"></script>
    <script src="~/Content/vendor/jquery-validation/jquery.validate.min.js" type="text/javascript"></script>
    <script>
     const validator = $("#Form").validate({
                    rules: {
                        "FromId": {
                            required: true
                        },
                        "ToId": {
                            required: true
                        },
                        "Amount": {
                            required: true
                        },
                    },
                    ignore: [],
                    errorClass: "invalid-feedback animated fadeInUp",
                    errorElement: "div",
                    errorPlacement: function (e, a) {
                       jQuery(a).after(e)
                    },
                    highlight: function (e) {
                        jQuery(e).closest(".form-group").removeClass("is-invalid").addClass("is-invalid")
                    },
                    success: function (e) {
                        jQuery(e).closest(".form-group").removeClass("is-invalid").addClass("is-valid")
                    },
        
                    submitHandler: function () {
                       const tran = {
                           FromId: $("#FromId").val(),
                           ToId: $("#BankId").val(),
                           Messages: $("#Messages").val(),
                           Amount: $("#Amount").val()
                       };
                       if (tran.Amount[0] === "0") {
                           notifyError("Error","Your Amount must be number")
                       } else {
                           transfer(tran);
                           // for (let i = 0; i < 100; i++) {
                           //         
                           // }
                       }
                    }
                });
        function loadAccountNumber(accountId) {
            let data;
            $.ajax({
                type: "GET",
                url: "/BankAccounts/GetData",
                data: { Account: accountId },
                async: false,
                success: function (res) {
                    console.log(res)
                    let html;
                    $.each(res.data, function (key, value) {
                        html += "<option value = '" + value.BankAccountId + "'  >" + value.Name + " </option>";
                    });
                    $('#FromId').append(html);
                    data = res.data;
                }
            });
            return data;
        }
        function loadBalance(bankId) {
            let data;
            $.ajax({
                type: "POST",
                url: "/BankAccounts/GetBalance",
                data: { bankId: bankId },
                async: false,
                success: function (res) {
                    data = res.data;
                }

            });
            return data;
        }
        function transfer (tran) {
            $.ajax({
                type: "POST",
                url: "/Transactions/Transfers",
                data: tran,
                success: function (res) {
                    if (res.statusCode === 200) {
                        $("#myModal").modal("hide");
                        notifySuccess("Transfers Success", "Transfers Success");
                        // sleep(3000).then(() => {
                        //     let bankId = $("#FromId").val();
                        //     window.location.assign("/Transactions/ProfileAccountNumber/" + bankId)
                        // });
                    } else {
                        validator.showErrors(res.data);
                    }
                }
            })
        }
        function loadInfoBankAccount(name) {
            let data;
            $.ajax({
                type: "GET",
                url: "/BankAccounts/GetInfoBankAccount",
                data: { name: name },
                async: false,
                success: function (res) {
                    if (res.statusCode === 200) {
                        data = res;
                    } else {
                        data = res;
                        console.log(res);
                        toastr.error(res.message);
                    }
                }

            });
            return data;
        }
        function sleep(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }


        $(function () {
            loadAccountNumber("@user.AccountId");
            $("#Form").trigger("reset");

            $(document).on('change', '#FromId', function () {
                if ($("#FromId").val() === "") {
                    $('#text1').css('display', 'none');
                    $('#infoSource').css('display', 'none');
                    $('#ToId').prop('disabled', true);
                    $('#Amount').prop('disabled', true);
                    $('#Messages').prop('disabled', true);
                } else {
                    let dataBalance = loadBalance(this.value)
                    $('#text1').css('display', 'inline-block');
                    $('#infoSource').css('display', 'inline-block');
                    $('#infoSource').html(new Intl.NumberFormat('vi-VN', { style: 'currency', currency: dataBalance[0].Currency }).format(dataBalance[0].Balance));
                    $('#ToId').prop('disabled', false);
                    $('#Amount').prop('disabled', false);
                    $('#Messages').prop('disabled', false);
                    $('#Amount').val("");
                }
            });

            $(document).on('blur', '#ToId', function () {
                let dataInfoBankAccount;
                if (this.value.length === 0) {
                    $('#text2').css('display', 'none');
                    $('#infoReceiver').css('display', 'none');
                } else {
                    dataInfoBankAccount = loadInfoBankAccount(this.value);
                    $('#text2').css('display', 'inline-block');
                }
                if (dataInfoBankAccount.statusCode === 200) {
                    $("#BankId").val(dataInfoBankAccount.data[0].Id);
                    $('#infoReceiver').css('display', 'inline-block');
                    $('#infoReceiver').html(dataInfoBankAccount.data[0].Name);
                } else {
                    $("#BankId").val("");
                    $('#infoReceiver').css('display', 'inline-block');
                    $('#infoReceiver').html("Account doesn't exist");
                }
            });
            $(document).on("keyup", "#Amount", function () {
                if ($("#Amount").val()[0] === "0") {
                    toastr.error("Nhập sai")
                    $("#Amount").val("")
                }
            })
            // $(document).on("click", "#btnSave", function () {
            //     const tran = {
            //         FromId: $("#FromId").val(),
            //         ToId: $("#BankId").val(),
            //         Messages: $("#Messages").val(),
            //         Amount: $("#Amount").val()
            //     };
            //    
            //     if (tran.Amount[0] === "0") {
            //         notifyError("Error","Nhập sai")
            //     } else {
            //         for (let i = 0; i < 100; i++) {
            //                 transfer(tran);
            //         }
            //     }
            // })

        })
    </script>
}